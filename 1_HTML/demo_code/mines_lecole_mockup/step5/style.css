body {
    font-family: 'Open Sans', sans-serif;
    color: #333333;
    font-size: 14px;
    margin: 0;
}



.top-header {
    /* 
        My solution to display the children block elements horizontally instead of the 
        default vertical, with flexibility in the way to arrange them. 

        Other possible solutions are : using `float: left`, using `display: inline-block',
        using CSS grid.
    */ 
    display: flex;
}

.top-header .left-placeholder, 
.top-header .right-placeholder {
    flex-grow: 1;
}

.top-header .right-placeholder {
    background-color: #f5f5f5;
}

.top-header .top-header-content {
    width: 1140px;
    display: flex;
    background-color: #f5f5f5;
}

.top-header .logo {
    height: 130px;
    width: 190px;
    background-color: white;
}

.top-header .logo img {
    /* Center the image horizontally in the container */
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.top-header .nav-menu {
    /* flex property of this element, relative to its parent,
    asking to take the whole available width in the parent */
    flex-grow: 1;
}




.page-content {
    width: 1140px;
    margin-right: auto;
    margin-left: auto;
    margin-top: 40px;

    display: flex;
}

.page-content .left-panel {
    width: 66.66%;
    padding-right: 30px;
    line-height: 2em;
}

.page-content .right-panel {
    width: 33.33%;
    padding-left: 30px;
}

.page-content h2 {
    font-size: 40px;
    font-weight: 400;
    margin-top: 0;
}

.page-content .content-menu .menu-item {
    color: #999999;
    display: block;
    margin-top: 15px;
    margin-bottom: 15px;
}

.page-content .content-menu hr {
    border-top: 0;
    border-left: 0;
    border-right: 0;
    border-color: #CCCCCC;
}